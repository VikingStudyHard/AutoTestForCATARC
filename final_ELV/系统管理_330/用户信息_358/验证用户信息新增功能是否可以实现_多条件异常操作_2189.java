package cn.edu.tju.scs.seql.final_ELV.系统管理_330.用户信息_358;

import static org.testng.Assert.assertEquals;
import static org.testng.Assert.*;

import org.openqa.selenium.*;
import org.testng.Assert;
import org.testng.annotations.*;

import cn.edu.tju.scs.seql.ELV.common.*;
import cn.edu.tju.scs.seql.element.*;

/**
 * 测试用例id: 2189
 * 所属产品: ELV环境合规系统（标准版）(#17)
 * 所属模块: 用户信息(#358)
 * 用例名称: 验证用户信息新增功能是否可以实现-多条件异常操作
 * 前置条件: 能正确进入ELV环境合规系统（标准版）用户信息界面
 * 测试步骤->1. 点击新增按钮
 * 测试预期->1. 跳出新页面显示新增一用户所需要填写的各项内容，其中姓名和用户名称红色星号标识为必填项。
 * 测试步骤->2. 将标识的必要两项姓名和登录名填写项目分别填写test和123，点击部门信息中的新增按钮。
 * 测试预期->2. 跳出新页面显示所有部门的信息内容。
 * 测试步骤->3. 在检索条件中的部门中文名称填写test，点击检索按钮。
 * 测试预期->3. 页面出现中文名称中包含test字段的所有部门，页面其余各项正常显示。
 * 测试步骤->4. 在检索条件中的部门英文名称填写22，点击检索按钮。
 * 测试预期->4. 出现提示信息：您查找的数据不存在！
 * 测试步骤->5. 删除检索条件中的部门中文名称所填信息，点击检索按钮。
 * 测试预期->5. 页面出现英文名称中包含22字段的所有部门，页面其余各项正常显示。
 * 测试步骤->6. 删除所填写的检索条件中的内容，在检索条件中的部门CAMDS_ID填写123，点击检索按钮。
 * 测试预期->6. 页面出现部门CAMDS_ID中包含123字段的所有部门，页面其余各项正常显示。
 * 测试步骤->7. 删除所填写的检索条件中的内容，在检索条件中的用户中文名称填写李德平，点击检索按钮。
 * 测试预期->7. 页面出现一条部门信息，页面其余各项正常显示。
 * 测试步骤->8. 删除所填写的检索条件中的内容，在检索条件中的DUNS编码填写123，点击检索按钮。
 * 测试预期->8. 出现提示信息：您查找的数据不存在！
 * 测试步骤->9. 删除所填写的检索条件中的内容，在检索条件中的邮政编码填写123，点击检索按钮。
 * 测试预期->9. 出现提示信息：您查找的数据不存在！
 * 测试步骤->10. 删除所填写的检索条件中的内容，在检索条件中的城市填写tj，点击检索按钮。
 * 测试预期->10. 页面出现城市中包含tj字段的所有部门，页面其余各项正常显示。
 * 测试步骤->11. 删除所填写的检索条件中的内容，在检索条件中的用户英文名称填写test，点击检索按钮。
 * 测试预期->11. 页面出现五条部门信息，页面其余各项正常显示。
 * 测试步骤->12. 删除所填写的检索条件中的内容，在检索条件中的用户登录名称填写lideping，点击检索按钮。
 * 测试预期->12. 页面出现一条部门信息，页面其余各项正常显示。
 * 测试步骤->13. 删除所填写的检索条件中的内容，在检索条件中的机构代码填写738，点击检索按钮。
 * 测试预期->13. 页面出现机构代码中包含738字段的所有部门，页面其余各项正常显示。
 * 
 */

public class 验证用户信息新增功能是否可以实现_多条件异常操作_2189 extends Selenium_Test_Base {
	
	public 验证用户信息新增功能是否可以实现_多条件异常操作_2189(){
		super();
	}
	
	public 验证用户信息新增功能是否可以实现_多条件异常操作_2189(WebDriver driver){
		super(driver);
	}
	
	@Test
	public void testNg() throws Exception {
		LoginAction.loginAction(driver,baseUrl);
		WebElement leftFrame=getElement(ElementEnum_用户信息_358.leftFrame);
		WebElement mainFrame=getElement(ElementEnum_用户信息_358.rightFrame);
	    driver.switchTo().frame(leftFrame);
	    operationInLeftFrame();
	    driver.switchTo().defaultContent();
		
		driver.switchTo().frame(mainFrame);
	    detailedOperation();
	}
	
	/**
	 * LeftFrame中的操作，主要是选择不同的功能
	 */
	public void operationInLeftFrame(){

	
		WebDriverConfiguration.operationInterval();
		getElement(ElementEnum_用户信息_358.一级目录名称).click();
		WebDriverConfiguration.operationInterval();
		getElement(ElementEnum_用户信息_358.二级目录名称).click();
		WebDriverConfiguration.operationInterval();
	
	}
	
	/**
	 * 具体的测试操作，在右边的mianFrame中进行
	 */
	public void detailedOperation(){
		// TODO 弹窗无法测试
	
	}

	
	public String getDescription(){
		return "测试用例id: 2189\n"
				+" 所属产品: ELV环境合规系统（标准版）(#17)\n"
				+" 所属模块: 用户信息(#358)\n"
				+" 用例名称: 验证用户信息新增功能是否可以实现-多条件异常操作\n"
				+" 前置条件: 能正确进入ELV环境合规系统（标准版）用户信息界面\n"
				+" 测试步骤->1. 点击新增按钮\n"
				+" 测试预期->1. 跳出新页面显示新增一用户所需要填写的各项内容，其中姓名和用户名称红色星号标识为必填项。\n"
				+" 测试步骤->2. 将标识的必要两项姓名和登录名填写项目分别填写test和123，点击部门信息中的新增按钮。\n"
				+" 测试预期->2. 跳出新页面显示所有部门的信息内容。\n"
				+" 测试步骤->3. 在检索条件中的部门中文名称填写test，点击检索按钮。\n"
				+" 测试预期->3. 页面出现中文名称中包含test字段的所有部门，页面其余各项正常显示。\n"
				+" 测试步骤->4. 在检索条件中的部门英文名称填写22，点击检索按钮。\n"
				+" 测试预期->4. 出现提示信息：您查找的数据不存在！\n"
				+" 测试步骤->5. 删除检索条件中的部门中文名称所填信息，点击检索按钮。\n"
				+" 测试预期->5. 页面出现英文名称中包含22字段的所有部门，页面其余各项正常显示。\n"
				+" 测试步骤->6. 删除所填写的检索条件中的内容，在检索条件中的部门CAMDS_ID填写123，点击检索按钮。\n"
				+" 测试预期->6. 页面出现部门CAMDS_ID中包含123字段的所有部门，页面其余各项正常显示。\n"
				+" 测试步骤->7. 删除所填写的检索条件中的内容，在检索条件中的用户中文名称填写李德平，点击检索按钮。\n"
				+" 测试预期->7. 页面出现一条部门信息，页面其余各项正常显示。\n"
				+" 测试步骤->8. 删除所填写的检索条件中的内容，在检索条件中的DUNS编码填写123，点击检索按钮。\n"
				+" 测试预期->8. 出现提示信息：您查找的数据不存在！\n"
				+" 测试步骤->9. 删除所填写的检索条件中的内容，在检索条件中的邮政编码填写123，点击检索按钮。\n"
				+" 测试预期->9. 出现提示信息：您查找的数据不存在！\n"
				+" 测试步骤->10. 删除所填写的检索条件中的内容，在检索条件中的城市填写tj，点击检索按钮。\n"
				+" 测试预期->10. 页面出现城市中包含tj字段的所有部门，页面其余各项正常显示。\n"
				+" 测试步骤->11. 删除所填写的检索条件中的内容，在检索条件中的用户英文名称填写test，点击检索按钮。\n"
				+" 测试预期->11. 页面出现五条部门信息，页面其余各项正常显示。\n"
				+" 测试步骤->12. 删除所填写的检索条件中的内容，在检索条件中的用户登录名称填写lideping，点击检索按钮。\n"
				+" 测试预期->12. 页面出现一条部门信息，页面其余各项正常显示。\n"
				+" 测试步骤->13. 删除所填写的检索条件中的内容，在检索条件中的机构代码填写738，点击检索按钮。\n"
				+" 测试预期->13. 页面出现机构代码中包含738字段的所有部门，页面其余各项正常显示。\n"
;
	}

}
